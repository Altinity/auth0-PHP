name: Create GitHub Release

on:
  pull_request:
    types:
      - closed

permissions:
  contents: write

jobs:
  release:
    if: github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Get the version from the branch name
      - id: get_version
        uses: auth0/dx-sdk-actions/get-version@latest

      # Get the prerelease flag from the branch name
      - id: get_prerelease
        uses: auth0/dx-sdk-actions/get-prerelease@latest
        with:
          version: ${{ steps.get_version.outputs.version }}

      # Check if the tag already exists
      - id: tag_exists
        uses: auth0/dx-sdk-actions/tag-exists@latest
        with:
          tag: ${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # If the tag already exists, exit with an error
      - if: steps.tag_exists.outputs.exists == 'true'
        run: exit 1

      #########################################################################
      # Relevant build steps here
      #########################################################################

      # Create a tag for the release
      - uses: auth0/dx-sdk-actions/tag-create@latest
        with:
          tag: ${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # Create a release for the tag
      - uses: auth0/dx-sdk-actions/release-create@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.event.pull_request.title }}
          body: ${{ github.event.pull_request.body }}
          tag: ${{ steps.get_version.outputs.version }}
          commit: ${{ github.sha }}
          prerelease: ${{ steps.get_prerelease.outputs.prerelease }}
